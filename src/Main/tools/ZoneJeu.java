/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Main.tools;

import Main.PirateFrame;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Point;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author pauli
 */
public class ZoneJeu extends javax.swing.JPanel {

    private Image imageCarte;
    PirateFrame mainFrame;
    /**
     * Creates new form ZoneJeu
     */
    public ZoneJeu() {
        initComponents();
        try {
            // lire l'image
            imageCarte = ImageIO.read(new File(System.getProperty("user.dir")+"\\src\\resource\\carte_emplacement.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(ZoneImageProfil.class.getName()).log(Level.SEVERE, null, ex);
        }
        repaint();
    }
    
    public void setMainFrame(PirateFrame mainFrame) {
        this.mainFrame = mainFrame;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(242, 242, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 754, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if(imageCarte != null){
            imageCarte = imageCarte.getScaledInstance(getWidth(), getHeight(), Image.SCALE_SMOOTH);
            g.drawImage(imageCarte, 0, 0, null);
        }
    }
    
    public boolean finTour(){
        ArrayList<ZoneCarte> cartes = mainFrame.getCartes();
        Point posBasDroite = new Point(getLocation().x+getWidth(),
                                    getLocation().y+getHeight());
        boolean carteJouee = false;
        for (int i =0; i<cartes.size(); i++){
            Point cLoc = cartes.get(i).getLocation();
            if(getLocation().x < cLoc.x && cLoc.x < posBasDroite.x &&
                    getLocation().y < cLoc.y && cLoc.y < posBasDroite.y){
                System.out.println("Jouer Carte: "+ cartes.get(i).getName());
                
                if (carteJouee){
                    return false;
                }
                carteJouee=true;
            }
        }
        return carteJouee;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}