/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Main.tools;

import Main.PirateFrame;
import entities.Carte;

import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author alex
 * @author paulin
 */
public class ZoneHand extends javax.swing.JPanel {

    /**
     * Creates new form ZoneHand
     */
    private Image imageCarte;
    private int nbCard = 0;
    private PirateFrame mainFrame;
    
    public ZoneHand() {
        initComponents();
        try {
            // lire l'image
            imageCarte = ImageIO.read(new File(System.getProperty("user.dir")+"\\src\\resource\\main.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(ZoneImageProfil.class.getName()).log(Level.SEVERE, null, ex);
        }
        repaint();
    }
    
    public void setMainFrame(PirateFrame mainFrame) {
        this.mainFrame = mainFrame;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 102, 102));
        setPreferredSize(new java.awt.Dimension(390, 150));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if(imageCarte != null){
            imageCarte = imageCarte.getScaledInstance(getWidth(), getHeight(), Image.SCALE_SMOOTH);
            g.drawImage(imageCarte, 0, 0, null);
        }
    }
    public void reset(){
        nbCard = 0;
    }
    
    public void spawnCard(Carte carte){
        ZoneCarte newCarte = new ZoneCarte();
        if (carte!=null) {
	        newCarte.setCarteNf(carte);
	        newCarte.updateVisuel();
        }
        mainFrame.add(newCarte);
        newCarte.setSize(120, 190);
        int unitWidth = getWidth()/5;
        newCarte.setLocation((unitWidth*nbCard)+(unitWidth/4)*(nbCard+1)+getLocation().x,
                (getHeight()-newCarte.getHeight())/2+getLocation().y+30);
        mainFrame.addCarte(newCarte);
        nbCard+=1;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
