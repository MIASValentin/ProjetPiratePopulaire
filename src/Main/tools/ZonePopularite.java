/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Main.tools;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

import Main.PirateFrame;

/**
 *
 * @author pauli
 */
public class ZonePopularite extends javax.swing.JPanel {
    //les variables suivantes seront chang√©es par des gets au code eclipse---
    private int maxPop = 5;
    private int pop = 0;
    //-----------------------------------------------------------------------
    
    private Image image;
    private int popBarSize;
    PirateFrame mainFrame;
    
    public ZonePopularite() {
        initComponents();
        String localPirateAdresse = (System.getProperty("user.dir"));
        File path = new File(localPirateAdresse + "\\src\\resource\\bouteille_dressee.jpg");
        ajouterImage(path);
        repaint();
    }
    
    public void setMainFrame(PirateFrame mainFrame) {
        this.mainFrame = mainFrame;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void updateStat(int numJoueur){
    	if (numJoueur==1) {
    		this.pop = mainFrame.getPirate1().getPrime();
    	}else{
    		this.pop = mainFrame.getPirate2().getPrime();
    	}
    	repaint();
    }
    
    private void ajouterImage(File fichierImage){
        try {
            // lire l'image
            image = ImageIO.read(fichierImage);
        } catch (IOException ex) {
            Logger.getLogger(ZoneImageProfil.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D) g;
        if(image != null){
            image = image.getScaledInstance(getWidth(), getHeight(), Image.SCALE_SMOOTH);
            g.drawImage(image, 0, 0, null);
        }
        popBarSize = getHeight()/2;
        int endHealthHeight = popBarSize-(((pop+maxPop)*popBarSize)/(maxPop*2));
        g2.setStroke(new BasicStroke(3));
        if (pop!=maxPop){
            g2.setColor(Color.black);
            g2.drawLine(getWidth()/2, getHeight()/4, getWidth()/2, getHeight()/4+endHealthHeight);            
        }
        g2.setColor(Color.blue);
        g2.drawLine(getWidth()/2, getHeight()/4+endHealthHeight, getWidth()/2, getHeight()/4+popBarSize);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
